//import java.io.IOException;
//
//import java.io.BufferedReader;
//import java.io.IOException;
//import java.io.InputStream;
//import java.io.InputStreamReader;
//import java.util.Scanner;
//
//
//public class pbdemo {
//	public static void main(String[] args) throws IOException, InterruptedException {
//		ProcessBuilder pb = new ProcessBuilder("echo","this is demo");
//		Process process = pb.start();
//		int err = process.waitFor();
//		System.out.println("echo process started" + (err==0 ? "fail":"Yes"));
//		System.out.println("echo output" + output(process.getInputStream()));
////		InputStream inputstream = new InputStream(process.getInputStream());
//		
//		
//	}
//   public static String output(InputStream inputstream) throws IOException{
//	   
//	  BufferedReader br = new BufferedReader(new InputStreamReader(inputstream));
//	   StringBuffer sb = new StringBuffer();
//		   while(br.readLine()!=null){
//		   sb = sb.append(br.readLine() + System.getProperty("line.separator"));
//   }
//	 return sb.toString();
//	 }
//}

import java.io.IOException;
import java.util.*;

public class ProcessBuilderExample
{
  
  public static void main(String[] args) throws Exception
  {
    new ProcessBuilderExample();
  }

  // can run basic ls or ps commands
  // can run command pipelines
  // can run sudo command if you know the password is correct
  public ProcessBuilderExample() 
  throws IOException, InterruptedException
  {
    // determine the number of processes running on the current
    // linux, unix, or mac os x system.
    List<String> commands = new ArrayList<String>();
    commands.add("/bin/sh");
    commands.add("-c");
    commands.add("ps aux | wc -l");

    SystemCommandExecutor commandExecutor = new SystemCommandExecutor(commands);
    int result = commandExecutor.executeCommand();

    // stdout and stderr of the command are returned as StringBuilder objects
    StringBuilder stdout = commandExecutor.getStandardOutputFromCommand();
    StringBuilder stderr = commandExecutor.getStandardErrorFromCommand();
    System.out.println("The numeric result of the command was: " + result);
    System.out.println("\nSTDOUT:");
    System.out.println(stdout);
    System.out.println("\nSTDERR:");
    System.out.println(stderr);
  }
}

